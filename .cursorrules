name: Laravel PHP Expert Rules
description: >
    Reglas para trabajar de manera experta en proyectos PHP utilizando Laravel y sus mejores prácticas.
scope:
    language: php
rules:
    - "Escribe respuestas técnicas, concisas y con ejemplos precisos en PHP."
    - "Sigue las mejores prácticas y convenciones de Laravel."
    - "Utiliza programación orientada a objetos enfocada en los principios SOLID."
    - "Prefiere la iteración y modularización sobre la duplicación de código."
    - "Usa nombres descriptivos para variables y métodos."
    - "Usa minúsculas con guiones para nombres de directorios (por ejemplo, app/Http/Controllers)."
    - "Favorece la inyección de dependencias y el uso de contenedores de servicios."
    - "Utiliza características de PHP 8.1+ como propiedades tipadas y expresiones match."
    - "Sigue los estándares de codificación PSR-12."
    - "Usa tipado estricto: declare(strict_types=1);"
    - "Aprovecha las funcionalidades y ayudas integradas de Laravel siempre que sea posible."
    - "Sigue la estructura de directorios y las convenciones de nombres de Laravel."
    - "Maneja errores adecuadamente usando excepciones personalizadas, bloques try-catch, y el sistema de logs de Laravel."
    - "Utiliza las características de validación de Laravel para formularios y solicitudes."
    - "Implementa middleware para filtrar y modificar solicitudes."
    - "Utiliza Eloquent ORM para interacciones de base de datos."
    - "Usa el query builder de Laravel para consultas de base de datos complejas."
    - "Implementa migraciones y seeders adecuados para la base de datos."
    - "Gestiona dependencias utilizando Composer."
    - "Usa Eloquent ORM en lugar de consultas SQL crudas cuando sea posible."
    - "Implementa el patrón Repositorio para la capa de acceso a datos."
    - "Utiliza los mecanismos de autenticación y autorización de Laravel."
    - "Utiliza la caché de Laravel para mejorar el rendimiento."
    - "Usa colas de trabajos (job queues) para tareas de larga ejecución."
    - "Utiliza las herramientas de pruebas de Laravel (PHPUnit, Dusk) para pruebas unitarias y funcionales."
    - "Implementa versionamiento de API para APIs públicas."
    - "Utiliza la localización de Laravel para soporte multilenguaje."
    - "Protege la aplicación contra CSRF y otras vulnerabilidades comunes."
    - "Usa Laravel Mix para la compilación de assets."
    - "Agrega índices a las bases de datos para mejorar la velocidad de consultas."
    - "Utiliza el sistema de paginación de Laravel."
    - "Implementa un monitoreo y registro de errores efectivo."
    - "Sigue la arquitectura MVC de Laravel."
    - "Utiliza el sistema de rutas de Laravel para definir los endpoints."
    - "Valida solicitudes mediante Form Requests."
    - "Utiliza Blade como motor de plantillas para las vistas."
    - "Implementa relaciones de base de datos usando Eloquent correctamente."
    - "Utiliza el sistema de autenticación preconstruido de Laravel."
    - "Implementa transformaciones de recursos de API adecuadamente."
    - "Utiliza eventos y listeners para lograr un código desacoplado."
    - "Usa transacciones de base de datos para mantener la integridad de los datos."
    - "Utiliza el programador de tareas de Laravel para ejecutar tareas recurrentes."
